{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/dev/code/mod-4/project/front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/dev/code/mod-4/project/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/dev/code/mod-4/project/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/dev/code/mod-4/project/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/dev/code/mod-4/project/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/dev/code/mod-4/project/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/dev/code/mod-4/project/front-end/src/Containers/ToDoContainer.js\";\nimport React, { Component } from 'react';\nimport ToDoCard from '../Components/ToDoCard';\nimport { Container } from 'semantic-ui-react';\n\nvar ToDoContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToDoContainer, _Component);\n\n  function ToDoContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ToDoContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToDoContainer).call(this, props));\n\n    _this.changeViewToIndex = function (editToDo) {\n      var newArray = _toConsumableArray(_this.state.toDos);\n\n      var indexOfeditToDo = newArray.indexOf(editToDo);\n      newArray[indexOfeditToDo] = editToDo;\n\n      _this.setState({\n        toDos: newArray\n      });\n\n      _this.props.changeViewToHome();\n\n      _this.props.changeViewToAllTodos();\n    };\n\n    _this.renderToDos = function () {\n      var items = _this.state.toDos;\n      items.sort(function (a, b) {\n        // Turn your strings into dates, and then subtract them\n        // to get a value that is either negative, positive, or zero.\n        return new Date(b[\"created_at\"]) - new Date(a[\"created_at\"]);\n      });\n      return items.map(function (toDo) {\n        return React.createElement(ToDoCard, {\n          key: toDo.id,\n          toDo: toDo,\n          handleDelete: _this.handleDelete,\n          handleEdit: _this.handleEdit,\n          changeViewToIndex: _this.changeViewToIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.handleDelete = function (toDo) {\n      var token = localStorage.getItem('token');\n\n      var upDatedToDos = _toConsumableArray(_this.state.toDos);\n\n      var toDoToDelete = upDatedToDos.indexOf(toDo);\n      upDatedToDos.splice(toDoToDelete, 1);\n\n      _this.setState({\n        toDos: upDatedToDos\n      });\n\n      fetch(\"http://localhost:3000/api/v1/to_dos/\".concat(toDo.id), {\n        headers: {\n          'Authorization': token\n        },\n        method: \"DELETE\"\n      });\n    };\n\n    _this.state = {\n      toDos: []\n    };\n    return _this;\n  }\n\n  _createClass(ToDoContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var token = localStorage.getItem('token');\n      fetch('http://localhost:3000/api/v1/to_dos', {\n        headers: {\n          'Authorization': token\n        }\n      }).then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        return _this2.setState({\n          toDos: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.renderToDos());\n    }\n  }]);\n\n  return ToDoContainer;\n}(Component);\n\nexport default ToDoContainer;","map":{"version":3,"sources":["/Users/flatironschool/dev/code/mod-4/project/front-end/src/Containers/ToDoContainer.js"],"names":["React","Component","ToDoCard","Container","ToDoContainer","props","changeViewToIndex","editToDo","newArray","state","toDos","indexOfeditToDo","indexOf","setState","changeViewToHome","changeViewToAllTodos","renderToDos","items","sort","a","b","Date","map","toDo","id","handleDelete","handleEdit","token","localStorage","getItem","upDatedToDos","toDoToDelete","splice","fetch","headers","method","then","r","json","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ToDoCard from '../Components/ToDoCard'\nimport {Container} from 'semantic-ui-react'\n\nclass ToDoContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      toDos: [],\n    }\n  }\n\n  changeViewToIndex = (editToDo) =>{\n    const newArray = [...this.state.toDos]\n    const indexOfeditToDo = newArray.indexOf(editToDo)\n    newArray[indexOfeditToDo] = editToDo\n    this.setState({toDos: newArray})\n    this.props.changeViewToHome()\n    this.props.changeViewToAllTodos()\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token')\n    fetch('http://localhost:3000/api/v1/to_dos', {\n      headers: {'Authorization': token}\n    })\n      .then(r => r.json())\n      .then(data => this.setState({toDos: data}))\n  }\n\n  renderToDos = () => {\n    const items = this.state.toDos\n    items.sort(function(a,b){\n  // Turn your strings into dates, and then subtract them\n  // to get a value that is either negative, positive, or zero.\n    return new Date(b[\"created_at\"]) - new Date(a[\"created_at\"]);\n    });\n    return items.map(toDo => <ToDoCard key={toDo.id} toDo={toDo} handleDelete={this.handleDelete} handleEdit={this.handleEdit} changeViewToIndex={this.changeViewToIndex}/>)\n  }\n\n  handleDelete = (toDo) => {\n    const token = localStorage.getItem('token')\n    const upDatedToDos = [...this.state.toDos]\n    const toDoToDelete = upDatedToDos.indexOf(toDo)\n    upDatedToDos.splice(toDoToDelete, 1)\n    this.setState({toDos: upDatedToDos})\n    fetch(`http://localhost:3000/api/v1/to_dos/${toDo.id}`, {\n      headers: {'Authorization': token},\n      method: \"DELETE\"\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n\n        {this.renderToDos()}\n\n      </Container>\n    );\n  }\n}\n\nexport default ToDoContainer;\n"]},"metadata":{},"sourceType":"module"}